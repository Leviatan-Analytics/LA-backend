///////////////////////////////////////////////////////////////////////////////////
// The following FIT Protocol software provided may be used with FIT protocol
// devices only and remains the copyrighted property of Garmin International, Inc.
// The software is being provided on an "as-is" basis and as an accommodation,
// and therefore all warranties, representations, or guarantees of any kind
// (whether express, implied or statutory) including, without limitation,
// warranties of merchantability, non-infringement, or fitness for a particular
// purpose, are specifically disclaimed.
//
// Copyright 2022 Garmin International, Inc.
///////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.89Release
// Tag = production/akw/21.89.00-0-g487f2ed0
///////////////////////////////////////////////////////////////////////////////////


package com.leviatan.fit.csv;

import com.leviatan.fit.BufferedMesgListener;
import com.leviatan.fit.Mesg;
import com.leviatan.fit.MesgListener;
import com.leviatan.fit.MesgSource;

import java.util.ArrayList;
import java.util.List;

public class CSVDataMesgFieldCounter implements BufferedMesgListener, MesgSource {
    private final ArrayList<MesgListener> mesgListeners = new ArrayList<MesgListener>();
    private final ArrayList<Mesg> mesgs = new ArrayList<>();
    private int maxNumFields = 0;

    public CSVDataMesgFieldCounter() {
    }

    @Override
    public void onMesg(Mesg mesg) {
        mesgs.add(mesg);

        if (mesg.getNumFields() > maxNumFields) {
            maxNumFields = mesg.getNumFields();
        }

    }

    @Override
    public void flushMesgs() {
        flushMesgs(mesgs);
    }

    @Override
    public void addListener(MesgListener mesgListener) {
        if ((mesgListener != null) && !mesgListeners.contains(mesgListener)) {
            mesgListeners.add(mesgListener);
        }
    }

    private void flushMesg(Mesg mesg) {
        mesgListeners.forEach(mesgListener -> mesgListener.onMesg(mesg));
    }

    private void flushMesgs(List<? extends Mesg> mesgs) {
        mesgs.forEach(mesg -> flushMesg(mesg));
    }

    public int getMaxNumFields() {
        return maxNumFields;
    }
}
